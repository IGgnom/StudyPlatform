#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudyPlatform
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StudyPlatform")]
	public partial class DatabaseLinkDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertCabinets(Cabinets instance);
    partial void UpdateCabinets(Cabinets instance);
    partial void DeleteCabinets(Cabinets instance);
    partial void InsertDisciplines(Disciplines instance);
    partial void UpdateDisciplines(Disciplines instance);
    partial void DeleteDisciplines(Disciplines instance);
    partial void InsertTimetable(Timetable instance);
    partial void UpdateTimetable(Timetable instance);
    partial void DeleteTimetable(Timetable instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertReplacements(Replacements instance);
    partial void UpdateReplacements(Replacements instance);
    partial void DeleteReplacements(Replacements instance);
    partial void InsertDocuments(Documents instance);
    partial void UpdateDocuments(Documents instance);
    partial void DeleteDocuments(Documents instance);
    partial void InsertStudents(Students instance);
    partial void UpdateStudents(Students instance);
    partial void DeleteStudents(Students instance);
    partial void InsertGroups(Groups instance);
    partial void UpdateGroups(Groups instance);
    partial void DeleteGroups(Groups instance);
    partial void InsertTeachers(Teachers instance);
    partial void UpdateTeachers(Teachers instance);
    partial void DeleteTeachers(Teachers instance);
    #endregion
		
		public DatabaseLinkDataContext() : 
				base(global::StudyPlatform.Properties.Settings.Default.StudyPlatformConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseLinkDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseLinkDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseLinkDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseLinkDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cabinets> Cabinets
		{
			get
			{
				return this.GetTable<Cabinets>();
			}
		}
		
		public System.Data.Linq.Table<Disciplines> Disciplines
		{
			get
			{
				return this.GetTable<Disciplines>();
			}
		}
		
		public System.Data.Linq.Table<Timetable> Timetable
		{
			get
			{
				return this.GetTable<Timetable>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<Replacements> Replacements
		{
			get
			{
				return this.GetTable<Replacements>();
			}
		}
		
		public System.Data.Linq.Table<Documents> Documents
		{
			get
			{
				return this.GetTable<Documents>();
			}
		}
		
		public System.Data.Linq.Table<Students> Students
		{
			get
			{
				return this.GetTable<Students>();
			}
		}
		
		public System.Data.Linq.Table<Groups> Groups
		{
			get
			{
				return this.GetTable<Groups>();
			}
		}
		
		public System.Data.Linq.Table<Teachers> Teachers
		{
			get
			{
				return this.GetTable<Teachers>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cabinets")]
	public partial class Cabinets : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CabinetId;
		
		private string _CabinetNumber;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCabinetIdChanging(int value);
    partial void OnCabinetIdChanged();
    partial void OnCabinetNumberChanging(string value);
    partial void OnCabinetNumberChanged();
    #endregion
		
		public Cabinets()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CabinetId
		{
			get
			{
				return this._CabinetId;
			}
			set
			{
				if ((this._CabinetId != value))
				{
					this.OnCabinetIdChanging(value);
					this.SendPropertyChanging();
					this._CabinetId = value;
					this.SendPropertyChanged("CabinetId");
					this.OnCabinetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNumber", DbType="NChar(10)")]
		public string CabinetNumber
		{
			get
			{
				return this._CabinetNumber;
			}
			set
			{
				if ((this._CabinetNumber != value))
				{
					this.OnCabinetNumberChanging(value);
					this.SendPropertyChanging();
					this._CabinetNumber = value;
					this.SendPropertyChanged("CabinetNumber");
					this.OnCabinetNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Disciplines")]
	public partial class Disciplines : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DisciplineId;
		
		private string _Discipline;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDisciplineIdChanging(int value);
    partial void OnDisciplineIdChanged();
    partial void OnDisciplineChanging(string value);
    partial void OnDisciplineChanged();
    #endregion
		
		public Disciplines()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DisciplineId
		{
			get
			{
				return this._DisciplineId;
			}
			set
			{
				if ((this._DisciplineId != value))
				{
					this.OnDisciplineIdChanging(value);
					this.SendPropertyChanging();
					this._DisciplineId = value;
					this.SendPropertyChanged("DisciplineId");
					this.OnDisciplineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discipline", DbType="NVarChar(50)")]
		public string Discipline
		{
			get
			{
				return this._Discipline;
			}
			set
			{
				if ((this._Discipline != value))
				{
					this.OnDisciplineChanging(value);
					this.SendPropertyChanging();
					this._Discipline = value;
					this.SendPropertyChanged("Discipline");
					this.OnDisciplineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Timetable")]
	public partial class Timetable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TimetableId;
		
		private int _Group;
		
		private string _L11;
		
		private string _L12;
		
		private string _L13;
		
		private string _L14;
		
		private string _L21;
		
		private string _L22;
		
		private string _L23;
		
		private string _L24;
		
		private string _L31;
		
		private string _L32;
		
		private string _L33;
		
		private string _L34;
		
		private string _L41;
		
		private string _L42;
		
		private string _L43;
		
		private string _L44;
		
		private string _L51;
		
		private string _L52;
		
		private string _L53;
		
		private string _L54;
		
		private EntityRef<Groups> _Groups;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTimetableIdChanging(int value);
    partial void OnTimetableIdChanged();
    partial void OnGroupChanging(int value);
    partial void OnGroupChanged();
    partial void OnL11Changing(string value);
    partial void OnL11Changed();
    partial void OnL12Changing(string value);
    partial void OnL12Changed();
    partial void OnL13Changing(string value);
    partial void OnL13Changed();
    partial void OnL14Changing(string value);
    partial void OnL14Changed();
    partial void OnL21Changing(string value);
    partial void OnL21Changed();
    partial void OnL22Changing(string value);
    partial void OnL22Changed();
    partial void OnL23Changing(string value);
    partial void OnL23Changed();
    partial void OnL24Changing(string value);
    partial void OnL24Changed();
    partial void OnL31Changing(string value);
    partial void OnL31Changed();
    partial void OnL32Changing(string value);
    partial void OnL32Changed();
    partial void OnL33Changing(string value);
    partial void OnL33Changed();
    partial void OnL34Changing(string value);
    partial void OnL34Changed();
    partial void OnL41Changing(string value);
    partial void OnL41Changed();
    partial void OnL42Changing(string value);
    partial void OnL42Changed();
    partial void OnL43Changing(string value);
    partial void OnL43Changed();
    partial void OnL44Changing(string value);
    partial void OnL44Changed();
    partial void OnL51Changing(string value);
    partial void OnL51Changed();
    partial void OnL52Changing(string value);
    partial void OnL52Changed();
    partial void OnL53Changing(string value);
    partial void OnL53Changed();
    partial void OnL54Changing(string value);
    partial void OnL54Changed();
    #endregion
		
		public Timetable()
		{
			this._Groups = default(EntityRef<Groups>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimetableId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TimetableId
		{
			get
			{
				return this._TimetableId;
			}
			set
			{
				if ((this._TimetableId != value))
				{
					this.OnTimetableIdChanging(value);
					this.SendPropertyChanging();
					this._TimetableId = value;
					this.SendPropertyChanged("TimetableId");
					this.OnTimetableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="Int NOT NULL")]
		public int Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L11", DbType="NVarChar(500)")]
		public string L11
		{
			get
			{
				return this._L11;
			}
			set
			{
				if ((this._L11 != value))
				{
					this.OnL11Changing(value);
					this.SendPropertyChanging();
					this._L11 = value;
					this.SendPropertyChanged("L11");
					this.OnL11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L12", DbType="NVarChar(500)")]
		public string L12
		{
			get
			{
				return this._L12;
			}
			set
			{
				if ((this._L12 != value))
				{
					this.OnL12Changing(value);
					this.SendPropertyChanging();
					this._L12 = value;
					this.SendPropertyChanged("L12");
					this.OnL12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L13", DbType="NVarChar(500)")]
		public string L13
		{
			get
			{
				return this._L13;
			}
			set
			{
				if ((this._L13 != value))
				{
					this.OnL13Changing(value);
					this.SendPropertyChanging();
					this._L13 = value;
					this.SendPropertyChanged("L13");
					this.OnL13Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L14", DbType="NVarChar(500)")]
		public string L14
		{
			get
			{
				return this._L14;
			}
			set
			{
				if ((this._L14 != value))
				{
					this.OnL14Changing(value);
					this.SendPropertyChanging();
					this._L14 = value;
					this.SendPropertyChanged("L14");
					this.OnL14Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L21", DbType="NVarChar(500)")]
		public string L21
		{
			get
			{
				return this._L21;
			}
			set
			{
				if ((this._L21 != value))
				{
					this.OnL21Changing(value);
					this.SendPropertyChanging();
					this._L21 = value;
					this.SendPropertyChanged("L21");
					this.OnL21Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L22", DbType="NVarChar(500)")]
		public string L22
		{
			get
			{
				return this._L22;
			}
			set
			{
				if ((this._L22 != value))
				{
					this.OnL22Changing(value);
					this.SendPropertyChanging();
					this._L22 = value;
					this.SendPropertyChanged("L22");
					this.OnL22Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L23", DbType="NVarChar(500)")]
		public string L23
		{
			get
			{
				return this._L23;
			}
			set
			{
				if ((this._L23 != value))
				{
					this.OnL23Changing(value);
					this.SendPropertyChanging();
					this._L23 = value;
					this.SendPropertyChanged("L23");
					this.OnL23Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L24", DbType="NVarChar(500)")]
		public string L24
		{
			get
			{
				return this._L24;
			}
			set
			{
				if ((this._L24 != value))
				{
					this.OnL24Changing(value);
					this.SendPropertyChanging();
					this._L24 = value;
					this.SendPropertyChanged("L24");
					this.OnL24Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L31", DbType="NVarChar(500)")]
		public string L31
		{
			get
			{
				return this._L31;
			}
			set
			{
				if ((this._L31 != value))
				{
					this.OnL31Changing(value);
					this.SendPropertyChanging();
					this._L31 = value;
					this.SendPropertyChanged("L31");
					this.OnL31Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L32", DbType="NVarChar(500)")]
		public string L32
		{
			get
			{
				return this._L32;
			}
			set
			{
				if ((this._L32 != value))
				{
					this.OnL32Changing(value);
					this.SendPropertyChanging();
					this._L32 = value;
					this.SendPropertyChanged("L32");
					this.OnL32Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L33", DbType="NVarChar(500)")]
		public string L33
		{
			get
			{
				return this._L33;
			}
			set
			{
				if ((this._L33 != value))
				{
					this.OnL33Changing(value);
					this.SendPropertyChanging();
					this._L33 = value;
					this.SendPropertyChanged("L33");
					this.OnL33Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L34", DbType="NVarChar(500)")]
		public string L34
		{
			get
			{
				return this._L34;
			}
			set
			{
				if ((this._L34 != value))
				{
					this.OnL34Changing(value);
					this.SendPropertyChanging();
					this._L34 = value;
					this.SendPropertyChanged("L34");
					this.OnL34Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L41", DbType="NVarChar(500)")]
		public string L41
		{
			get
			{
				return this._L41;
			}
			set
			{
				if ((this._L41 != value))
				{
					this.OnL41Changing(value);
					this.SendPropertyChanging();
					this._L41 = value;
					this.SendPropertyChanged("L41");
					this.OnL41Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L42", DbType="NVarChar(500)")]
		public string L42
		{
			get
			{
				return this._L42;
			}
			set
			{
				if ((this._L42 != value))
				{
					this.OnL42Changing(value);
					this.SendPropertyChanging();
					this._L42 = value;
					this.SendPropertyChanged("L42");
					this.OnL42Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L43", DbType="NVarChar(500)")]
		public string L43
		{
			get
			{
				return this._L43;
			}
			set
			{
				if ((this._L43 != value))
				{
					this.OnL43Changing(value);
					this.SendPropertyChanging();
					this._L43 = value;
					this.SendPropertyChanged("L43");
					this.OnL43Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L44", DbType="NVarChar(500)")]
		public string L44
		{
			get
			{
				return this._L44;
			}
			set
			{
				if ((this._L44 != value))
				{
					this.OnL44Changing(value);
					this.SendPropertyChanging();
					this._L44 = value;
					this.SendPropertyChanged("L44");
					this.OnL44Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L51", DbType="NVarChar(500)")]
		public string L51
		{
			get
			{
				return this._L51;
			}
			set
			{
				if ((this._L51 != value))
				{
					this.OnL51Changing(value);
					this.SendPropertyChanging();
					this._L51 = value;
					this.SendPropertyChanged("L51");
					this.OnL51Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L52", DbType="NVarChar(500)")]
		public string L52
		{
			get
			{
				return this._L52;
			}
			set
			{
				if ((this._L52 != value))
				{
					this.OnL52Changing(value);
					this.SendPropertyChanging();
					this._L52 = value;
					this.SendPropertyChanged("L52");
					this.OnL52Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L53", DbType="NVarChar(500)")]
		public string L53
		{
			get
			{
				return this._L53;
			}
			set
			{
				if ((this._L53 != value))
				{
					this.OnL53Changing(value);
					this.SendPropertyChanging();
					this._L53 = value;
					this.SendPropertyChanged("L53");
					this.OnL53Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L54", DbType="NVarChar(500)")]
		public string L54
		{
			get
			{
				return this._L54;
			}
			set
			{
				if ((this._L54 != value))
				{
					this.OnL54Changing(value);
					this.SendPropertyChanging();
					this._L54 = value;
					this.SendPropertyChanged("L54");
					this.OnL54Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Groups_Timetable", Storage="_Groups", ThisKey="Group", OtherKey="GroupId", IsForeignKey=true)]
		public Groups Groups
		{
			get
			{
				return this._Groups.Entity;
			}
			set
			{
				Groups previousValue = this._Groups.Entity;
				if (((previousValue != value) 
							|| (this._Groups.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Groups.Entity = null;
						previousValue.Timetable.Remove(this);
					}
					this._Groups.Entity = value;
					if ((value != null))
					{
						value.Timetable.Add(this);
						this._Group = value.GroupId;
					}
					else
					{
						this._Group = default(int);
					}
					this.SendPropertyChanged("Groups");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _Password;
		
		private string _RndKey;
		
		private string _Role;
		
		private EntitySet<Teachers> _Teachers;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnRndKeyChanging(string value);
    partial void OnRndKeyChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public Users()
		{
			this._Teachers = new EntitySet<Teachers>(new Action<Teachers>(this.attach_Teachers), new Action<Teachers>(this.detach_Teachers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RndKey", DbType="NVarChar(50)")]
		public string RndKey
		{
			get
			{
				return this._RndKey;
			}
			set
			{
				if ((this._RndKey != value))
				{
					this.OnRndKeyChanging(value);
					this.SendPropertyChanging();
					this._RndKey = value;
					this.SendPropertyChanged("RndKey");
					this.OnRndKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(15)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Teachers", Storage="_Teachers", ThisKey="Username", OtherKey="Username")]
		public EntitySet<Teachers> Teachers
		{
			get
			{
				return this._Teachers;
			}
			set
			{
				this._Teachers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Teachers(Teachers entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_Teachers(Teachers entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Replacements")]
	public partial class Replacements : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReplacementId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _LessonNumber;
		
		private string _Group;
		
		private string _DisciplineOld;
		
		private string _DisciplineNew;
		
		private string _CabinetNumber;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReplacementIdChanging(int value);
    partial void OnReplacementIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnLessonNumberChanging(System.Nullable<int> value);
    partial void OnLessonNumberChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnDisciplineOldChanging(string value);
    partial void OnDisciplineOldChanged();
    partial void OnDisciplineNewChanging(string value);
    partial void OnDisciplineNewChanged();
    partial void OnCabinetNumberChanging(string value);
    partial void OnCabinetNumberChanged();
    #endregion
		
		public Replacements()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplacementId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReplacementId
		{
			get
			{
				return this._ReplacementId;
			}
			set
			{
				if ((this._ReplacementId != value))
				{
					this.OnReplacementIdChanging(value);
					this.SendPropertyChanging();
					this._ReplacementId = value;
					this.SendPropertyChanged("ReplacementId");
					this.OnReplacementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LessonNumber", DbType="Int")]
		public System.Nullable<int> LessonNumber
		{
			get
			{
				return this._LessonNumber;
			}
			set
			{
				if ((this._LessonNumber != value))
				{
					this.OnLessonNumberChanging(value);
					this.SendPropertyChanging();
					this._LessonNumber = value;
					this.SendPropertyChanged("LessonNumber");
					this.OnLessonNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="NVarChar(10)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineOld", DbType="NVarChar(100)")]
		public string DisciplineOld
		{
			get
			{
				return this._DisciplineOld;
			}
			set
			{
				if ((this._DisciplineOld != value))
				{
					this.OnDisciplineOldChanging(value);
					this.SendPropertyChanging();
					this._DisciplineOld = value;
					this.SendPropertyChanged("DisciplineOld");
					this.OnDisciplineOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisciplineNew", DbType="NVarChar(100)")]
		public string DisciplineNew
		{
			get
			{
				return this._DisciplineNew;
			}
			set
			{
				if ((this._DisciplineNew != value))
				{
					this.OnDisciplineNewChanging(value);
					this.SendPropertyChanging();
					this._DisciplineNew = value;
					this.SendPropertyChanged("DisciplineNew");
					this.OnDisciplineNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CabinetNumber", DbType="NChar(10)")]
		public string CabinetNumber
		{
			get
			{
				return this._CabinetNumber;
			}
			set
			{
				if ((this._CabinetNumber != value))
				{
					this.OnCabinetNumberChanging(value);
					this.SendPropertyChanging();
					this._CabinetNumber = value;
					this.SendPropertyChanged("CabinetNumber");
					this.OnCabinetNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Documents")]
	public partial class Documents : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentId;
		
		private string _DocumentName;
		
		private System.Nullable<System.DateTime> _LoadingDate;
		
		private System.Data.Linq.Binary _Document;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentIdChanging(int value);
    partial void OnDocumentIdChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnLoadingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLoadingDateChanged();
    partial void OnDocumentChanging(System.Data.Linq.Binary value);
    partial void OnDocumentChanged();
    #endregion
		
		public Documents()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentId
		{
			get
			{
				return this._DocumentId;
			}
			set
			{
				if ((this._DocumentId != value))
				{
					this.OnDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentId = value;
					this.SendPropertyChanged("DocumentId");
					this.OnDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="NVarChar(100)")]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadingDate", DbType="Date")]
		public System.Nullable<System.DateTime> LoadingDate
		{
			get
			{
				return this._LoadingDate;
			}
			set
			{
				if ((this._LoadingDate != value))
				{
					this.OnLoadingDateChanging(value);
					this.SendPropertyChanging();
					this._LoadingDate = value;
					this.SendPropertyChanged("LoadingDate");
					this.OnLoadingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Document", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Document
		{
			get
			{
				return this._Document;
			}
			set
			{
				if ((this._Document != value))
				{
					this.OnDocumentChanging(value);
					this.SendPropertyChanging();
					this._Document = value;
					this.SendPropertyChanged("Document");
					this.OnDocumentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Students")]
	public partial class Students : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentId;
		
		private string _FirstName;
		
		private string _SecondName;
		
		private string _LastName;
		
		private System.Nullable<int> _Group;
		
		private string _PassportSerial;
		
		private string _PassportNumber;
		
		private string _Address;
		
		private string _Email;
		
		private EntityRef<Groups> _Groups;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIdChanging(int value);
    partial void OnStudentIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnSecondNameChanging(string value);
    partial void OnSecondNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGroupChanging(System.Nullable<int> value);
    partial void OnGroupChanged();
    partial void OnPassportSerialChanging(string value);
    partial void OnPassportSerialChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Students()
		{
			this._Groups = default(EntityRef<Groups>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentId
		{
			get
			{
				return this._StudentId;
			}
			set
			{
				if ((this._StudentId != value))
				{
					this.OnStudentIdChanging(value);
					this.SendPropertyChanging();
					this._StudentId = value;
					this.SendPropertyChanged("StudentId");
					this.OnStudentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(20)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondName", DbType="NVarChar(20)")]
		public string SecondName
		{
			get
			{
				return this._SecondName;
			}
			set
			{
				if ((this._SecondName != value))
				{
					this.OnSecondNameChanging(value);
					this.SendPropertyChanging();
					this._SecondName = value;
					this.SendPropertyChanged("SecondName");
					this.OnSecondNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(20)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="Int")]
		public System.Nullable<int> Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportSerial", DbType="NVarChar(4)")]
		public string PassportSerial
		{
			get
			{
				return this._PassportSerial;
			}
			set
			{
				if ((this._PassportSerial != value))
				{
					this.OnPassportSerialChanging(value);
					this.SendPropertyChanging();
					this._PassportSerial = value;
					this.SendPropertyChanged("PassportSerial");
					this.OnPassportSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(6)")]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(35)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Groups_Students", Storage="_Groups", ThisKey="Group", OtherKey="GroupId", IsForeignKey=true)]
		public Groups Groups
		{
			get
			{
				return this._Groups.Entity;
			}
			set
			{
				Groups previousValue = this._Groups.Entity;
				if (((previousValue != value) 
							|| (this._Groups.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Groups.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Groups.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._Group = value.GroupId;
					}
					else
					{
						this._Group = default(Nullable<int>);
					}
					this.SendPropertyChanged("Groups");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Groups")]
	public partial class Groups : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupId;
		
		private string _GroupName;
		
		private System.Nullable<int> _Teacher;
		
		private EntitySet<Timetable> _Timetable;
		
		private EntitySet<Students> _Students;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnTeacherChanging(System.Nullable<int> value);
    partial void OnTeacherChanged();
    #endregion
		
		public Groups()
		{
			this._Timetable = new EntitySet<Timetable>(new Action<Timetable>(this.attach_Timetable), new Action<Timetable>(this.detach_Timetable));
			this._Students = new EntitySet<Students>(new Action<Students>(this.attach_Students), new Action<Students>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(10)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teacher", DbType="Int")]
		public System.Nullable<int> Teacher
		{
			get
			{
				return this._Teacher;
			}
			set
			{
				if ((this._Teacher != value))
				{
					this.OnTeacherChanging(value);
					this.SendPropertyChanging();
					this._Teacher = value;
					this.SendPropertyChanged("Teacher");
					this.OnTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Groups_Timetable", Storage="_Timetable", ThisKey="GroupId", OtherKey="Group")]
		public EntitySet<Timetable> Timetable
		{
			get
			{
				return this._Timetable;
			}
			set
			{
				this._Timetable.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Groups_Students", Storage="_Students", ThisKey="GroupId", OtherKey="Group")]
		public EntitySet<Students> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Timetable(Timetable entity)
		{
			this.SendPropertyChanging();
			entity.Groups = this;
		}
		
		private void detach_Timetable(Timetable entity)
		{
			this.SendPropertyChanging();
			entity.Groups = null;
		}
		
		private void attach_Students(Students entity)
		{
			this.SendPropertyChanging();
			entity.Groups = this;
		}
		
		private void detach_Students(Students entity)
		{
			this.SendPropertyChanging();
			entity.Groups = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teachers")]
	public partial class Teachers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeacherId;
		
		private string _TeachersName;
		
		private string _PhoneNumber;
		
		private System.Nullable<int> _Group;
		
		private string _PassportSerial;
		
		private string _PassportNumber;
		
		private string _Username;
		
		private string _Address;
		
		private string _Email;
		
		private EntityRef<Users> _Users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeacherIdChanging(int value);
    partial void OnTeacherIdChanged();
    partial void OnTeachersNameChanging(string value);
    partial void OnTeachersNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnGroupChanging(System.Nullable<int> value);
    partial void OnGroupChanged();
    partial void OnPassportSerialChanging(string value);
    partial void OnPassportSerialChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Teachers()
		{
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeacherId
		{
			get
			{
				return this._TeacherId;
			}
			set
			{
				if ((this._TeacherId != value))
				{
					this.OnTeacherIdChanging(value);
					this.SendPropertyChanging();
					this._TeacherId = value;
					this.SendPropertyChanged("TeacherId");
					this.OnTeacherIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachersName", DbType="NVarChar(35)")]
		public string TeachersName
		{
			get
			{
				return this._TeachersName;
			}
			set
			{
				if ((this._TeachersName != value))
				{
					this.OnTeachersNameChanging(value);
					this.SendPropertyChanging();
					this._TeachersName = value;
					this.SendPropertyChanged("TeachersName");
					this.OnTeachersNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(15)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="Int")]
		public System.Nullable<int> Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportSerial", DbType="NVarChar(4)")]
		public string PassportSerial
		{
			get
			{
				return this._PassportSerial;
			}
			set
			{
				if ((this._PassportSerial != value))
				{
					this.OnPassportSerialChanging(value);
					this.SendPropertyChanging();
					this._PassportSerial = value;
					this.SendPropertyChanged("PassportSerial");
					this.OnPassportSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(6)")]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(15)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(35)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Teachers", Storage="_Users", ThisKey="Username", OtherKey="Username", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Teachers.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Teachers.Add(this);
						this._Username = value.Username;
					}
					else
					{
						this._Username = default(string);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
